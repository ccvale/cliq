// Generated by Xata Codegen 0.28.0.

// This file is where our *database types* are stored and initialized. The work was done for us here thanks to Xata's codegen tool. This file is used to initialize the client and to export the types we need to use in our application. Overall a very useful file that we don't have to write ourselves, and is extremely vital to the functionality of our application.


import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Users",
    columns: [
      { name: "userId", type: "string", notNull: true, defaultValue: "null" },
      {
        name: "location",
        type: "string",
        notNull: true,
        defaultValue: "Wayne, NJ",
      },
      {
        name: "bio",
        type: "string",
        notNull: true,
        defaultValue: "The user has no bio.",
      },
      { name: "age_filter", type: "multiple" },
      { name: "location_filter", type: "multiple" },
      { name: "primary_palette", type: "string", defaultValue: "Indigo" },
      { name: "secondary_palette", type: "string", defaultValue: "Cyan" },
      { name: "display_name", type: "string", defaultValue: "Nameless" },
      { name: "matches", type: "multiple" },
      { name: "primary_interest", type: "string", defaultValue: "Art" },
      { name: "secondary_interest", type: "string", defaultValue: "Food" },
      { name: "third_interest", type: "string", defaultValue: "Music" },
      { name: "likes", type: "multiple" },
      { name: "job_position", type: "string", defaultValue: "N/A" },
      { name: "job_company", type: "string", defaultValue: "N/A" },
      {
        name: "birthday",
        type: "datetime",
        defaultValue: "1900-01-10T00:00:00.000Z",
      },
      { name: "gender", type: "string", defaultValue: "Other" },
      { name: "isVerified", type: "bool", defaultValue: "false" },
    ],
  },
  {
    name: "messages",
    columns: [
      { name: "sender_id", type: "string" },
      { name: "receiver_id", type: "string" },
      { name: "message", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["Users"];
export type UsersRecord = Users & XataRecord;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type DatabaseSchema = {
  Users: UsersRecord;
  messages: MessagesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Chris-Valente-s-workspace-18lhf4.us-east-1.xata.sh/db/click",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
